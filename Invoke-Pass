# Simple ADSI example (uses current context - Kerberos if possible)
$ldapPath = "LDAP://dc01.example.com/DC=example,DC=com"
$root = [ADSI]$ldapPath

# Search
$searcher = New-Object System.DirectoryServices.DirectorySearcher($root)
$searcher.Filter = "(objectClass=user)"
$searcher.PageSize = 1000
$searcher.PropertiesToLoad.AddRange(@("sAMAccountName","displayName","mail")) | Out-Null

$results = $searcher.FindAll()
foreach ($r in $results) {
    $props = $r.Properties
    [PSCustomObject]@{
        SAMAccountName = ($props["samaccountname"] | Select-Object -First 1)
        DisplayName    = ($props["displayname"]    | Select-Object -First 1)
        Mail           = ($props["mail"]           | Select-Object -First 1)
    }
}



param(
    [string]$Server = "dc01.example.com",
    [string]$BaseDN = "DC=example,DC=com",
    [string]$Filter = "(objectClass=user)",
    [switch]$Verbose
)

Add-Type -AssemblyName System.DirectoryServices.Protocols

$ldap = [System.DirectoryServices.Protocols.LdapConnection]::new($Server)
$ldap.AuthType = [System.DirectoryServices.Protocols.AuthType]::Kerberos
$ldap.SessionOptions.Sealing = $true
$ldap.SessionOptions.Signing = $true

try {
    $ldap.Bind()
    if ($Verbose) { "Bound to $Server using Kerberos" }
}
catch {
    Write-Warning "Kerberos bind failed: $_. Falling back to Negotiate/Default"
    $ldap.AuthType = [System.DirectoryServices.Protocols.AuthType]::Negotiate
    $ldap.Bind()
}

$req = [System.DirectoryServices.Protocols.SearchRequest]::new($BaseDN, $Filter, [System.DirectoryServices.Protocols.SearchScope]::Subtree, @("sAMAccountName","displayName","mail"))
$res = $ldap.SendRequest($req)

foreach ($entry in $res.Entries) {
    [PSCustomObject]@{
        DN = $entry.DistinguishedName
        sAMAccountName = ($entry.Attributes["sAMAccountName"] -join ";")
        displayName = ($entry.Attributes["displayName"] -join ";")
        mail = ($entry.Attributes["mail"] -join ";")
    }
}

$ldap.Dispose()
